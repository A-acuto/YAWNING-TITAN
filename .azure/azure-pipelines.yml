trigger:
- main
- dev
- dev-gui
- feature/*
- hotfix/*
- bugfix/*
- release/*

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python38:
      python.version: '3.8'
    Python39:
      python.version: '3.9'
    Python310:
      python.version: '3.10'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'

- script: |
    python -m pip install --upgrade pip==23.2.1
    pip install wheel==0.38.4 --upgrade
    pip install setuptools==66 --upgrade
    pip install build
    pip install pytest-azurepipelines
  displayName: 'Install build dependencies'

- script: |
    python -m build --config-setting=--quiet
  displayName: 'Build Yawning-Titan'

- script: |
    YT=$(ls ./dist/yawningtitan-*.whl)
    python -m pip install torch==1.11+cpu -f https://download.pytorch.org/whl/torch_stable.html
    python -m pip install $YT[dev] --default-timeout 1000
  displayName: 'Install Yawning-Titan'

- script: |
    yawning-titan setup
  displayName: 'Perform the Yawning-Titan setup from the CLI'

- script: |
    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  displayName: 'Lint with flake8'

- script: |
    pytest tests/ -m "not (unit_test or integration_test or e2e_integration_test or gui_test)"
  displayName: 'Run unmarked tests'

- script: |
    pytest tests/ -m unit_test
  displayName: 'Run unit tests'

- script: |
    pytest tests/ -m integration_test
  displayName: 'Run integration tests'

- script: |
    pytest tests/ -m e2e_integration_test
  displayName: 'Run end-to-end integration tests'

- script: |
    echo 'Preparing to run GUI tests'
  displayName: 'Preparing to run GUI tests'

# GUI build pipeline
- script: |
    npm install --global yarn
  displayName: 'Install yarn'

- script: |
    cd network_editor && yarn
  displayName: 'Install dependencies with yarn'

- script: |
    cd network_editor && yarn test:ci
  displayName: 'Network Editor unit test'

- script: |
    cd network_editor && yarn build
  displayName: 'Build Network Editor'

- script: |
    yawning-titan gui & (sleep 15 && cd network_editor && yarn test:ci:e2e)
  displayName: 'GUI end-to-end test'
